{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","Titlebar.js","Login.js","signup.js","Profile.js","List.js","Homepage.js","index.js"],"names":["module","exports","App","class","href","Component","Boolean","window","location","hostname","match","Titlebar","className","to","Login","props","check","e","data","state","name","axios","post","headers","then","res","setState","user","catch","error","console","log","message","submit","password","go","setusername","target","value","setpassword","bind","this","type","onChange","onClick","Signup","email","setemail","Profile","username","List","Homepage","ReactDOM","render","path","exact","component","signup","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e43a22eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nclass App extends Component {\n  render()\n  {\n    return (<div>\n      <h1>Welcome to Todo app.Make list and complete your task</h1>\n      <ul class=\"nav nav-tabs\">\n        <li class=\"nav-item\"><a class=\"nav-link\" href=\"/To-do-app/login/\">Login</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\" href=\"/To-do-app/signup/\">Sign-up</a></li>\n      </ul>\n    </div>)\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from 'react-router-dom';\nimport titlebar from './Homepage.css';\n\nclass Titlebar extends Component{\n    render(){\n       return(\n          <div className=\"p-1 bg-primary text-white titlebar\">\n              <h3><center>To do</center></h3>\n              <label className=\"fixed-top p-2\"><Link className=\"text-white\" to={`/To-do-app/profile/`}>Profile</Link></label>\n          </div>\n       );\n    }\n}\n\nexport default Titlebar;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\nimport {BrowserRouter as Router, Route ,Redirect} from 'react-router-dom';\nimport './Login.css'\nimport Titlebar from './Titlebar';\nclass Login extends Component {\n\n    constructor(props)\n    {\n        super(props);\n        this.state ={\n            name:'',\n            password:'',\n            user:null,\n            go:'no'\n        }\n      //  this.check = this.check.bind(this);\n        this.setusername= this.setusername.bind(this);\n        this.setpassword= this.setpassword.bind(this);\n    }\n    check = (e)=>\n    { \n        const data= \n        {\n            \"username\":this.state.name\n        }\n        axios.post('http://localhost:5000/registers/fin/',\n            data,  {headers:{'Content-Type': 'application/json','Accept': 'application/json'}\n        }).then(res => {this.setState({user:res.data});})\n        .catch(function(error){console.log(error.message)});\n\n        console.log(this.state.user);\n    }\n    submit= () =>\n    {\n       const p=this.state.user.password;\n       if(p==this.state.password)\n       {\n           this.setState({go:'yes'});\n       }\n    }\n    setusername = (e)=>\n    {\n        this.setState({\n            name:e.target.value\n        });\n    }\n    setpassword = (e) =>\n    {\n        this.setState({\n            password:e.target.value\n        });\n    }\n    render()\n    {\n        if(this.state.go=='yes')\n        {\n            return <Redirect to='/To-do-app/tasks/'/>\n        }\n        return (<div className=\"margin1\">\n            <div className=\"card border-dark mb-3 \">\n                <div class=\"card-header text-center\">\n                    <h1>LOGIN</h1>\n                </div>\n                <ul className=\"list-group list-group-flush\">\n                    <p >Username:</p>\n                    <input className=\"size1\" type=\"text\" onChange={this.setusername} /> \n                    <p>Password:</p>\n                    <input className=\"size1\" type=\"text\" onChange={this.setpassword} />\n                    {this.state.name!='' && this.check(this.state.name)}\n                    <button className=\"btn btn-primary size1\" onClick={this.submit} > Submit</button>\n                </ul>\n            </div>\n        </div>);\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nclass Signup extends Component {\n\n    constructor(props)\n    {\n        super(props);\n        this.state ={\n            name:'',\n            password:'',\n            email:'',\n            user:null,\n            go:'no'\n        }\n      //this.check = this.check.bind(this);\n        this.setusername= this.setusername.bind(this);\n        this.setemail= this.setemail.bind(this);\n        this.setpassword= this.setpassword.bind(this);\n    }\n    check = (e)=>\n    {\n        console.log(this.state.user);\n    }\n    submit= () =>\n    {\n        const data= \n        {\n            \"username\":this.state.name,\n            \"email\":this.state.email,\n            \"password\":this.state.password\n        }\n        axios.post('http://localhost:5000/registers/add/',\n                data,\n                {headers:{'Content-Type': 'application/json','Accept': 'application/json'}\n        }).then(res => {\n            this.setState({user:res.data});\n            console.log(res);\n        })\n        .catch(function(error){console.log(error.message);console.log(\"RR\");});\n    }\n    setemail=(e)=>\n    {\n        this.setState({email:e.target.value});\n    }\n    setusername = (e)=>\n    {\n        this.setState({\n            name:e.target.value\n        });\n    }\n    setpassword = (e) =>\n    {\n        this.setState({\n            password:e.target.value\n        });\n    }\n    render()\n    {\n        if(this.state.go=='yes')\n        {\n            return <h1>Registered successfully</h1>\n        }\n        return (<div>\n            Username : <input type=\"text\" onChange={this.setusername}/><br/><hr/> \n            Email : <input type=\"text\" onChange={this.setemail} />  <br/><hr/>\n            password: <input type=\"text\" onChange={this.setpassword} /><br/><br/>\n            <button onClick={this.submit} > Submit</button>\n        </div>);  \n    }\n}\n\nexport default Signup;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass Profile extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            username : \"Chintan\"\n        }\n    }\n    render(){\n       return(\n        <div>\n            Name : {this.state.username}<br/>\n        </div>\n       );\n    }\n}\nexport default Profile;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport list from './Homepage.css'\n\nclass List extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            username : \"Chintan\"\n        }\n    }\n    render(){\n       return(\n        <div className=\"list\">\n            <ul>\n                <li>My day</li>\n                <li>Important</li>\n                <li>Planned</li>\n            </ul>\n        </div>\n       );\n    }\n}\nexport default List;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Titlebar from './Titlebar';\nimport List from './List';\n\nclass Homepage extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            \n        }\n    }\n    render(){\n       return(\n          <div>\n              <Titlebar/>\n              <List/>\n          </div>\n       );\n    }\n}\n\nexport default Homepage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter ,Route,Redirect,Switch} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Login from './Login';\nimport signup from './signup';\nimport Profile from './Profile';\nimport Homepage from './Homepage';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/To-do-app/\" exact component={App} />\n      <Route path='/To-do-app/profile/' exact component={Profile}></Route> \n      <Route path='/To-do-app/login/' exact component={Login}></Route> \n      <Route path='/To-do-app/signup/' exact component={signup}></Route> \n      <Route path='/To-do-app/tasks/' exact component={Homepage}></Route> \n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}